// Generated by CoffeeScript 1.3.3

/*
downloads episode wiki pages
*/


(function() {
  var $, downloadedRows, epListUrl, epListWritten, fs, fullURL, getEpisodeCB, getEpisodeFilename, getListHTMLCB, http, loadRow, rows, url;

  http = require('http');

  fs = require('fs');

  url = require('url');

  $ = require('jquery');

  epListUrl = 'http://en.wikipedia.org/wiki/List_of_Seinfeld_episodes';

  getListHTMLCB = function(response) {
    var str;
    str = '';
    response.on("data", function(data) {
      return str += data;
    });
    response.on("end", function() {
      console.log(str);
      return fs.writeFile("data/wiki/epList.html", str, epListWritten);
    });
    return response.on("error", function(err) {
      console.log('error');
      return console.log(err);
    });
  };

  rows = null;

  downloadedRows = 0;

  epListWritten = function() {
    return fs.readFile("data/wiki/epList.html", 'utf8', function(err, data) {
      rows = $(data).find(".wikitable.plainrowheaders tr");
      return loadRow();
    });
  };

  epListWritten();

  getEpisodeFilename = function(url) {
    var newFilename;
    newFilename = "data/wiki/ep";
    return newFilename += url.replace(/[^a-zA-Z0-9]/g, "");
  };

  getEpisodeCB = function(response) {
    var str;
    str = "";
    response.on("data", function(data) {
      return str += data;
    });
    return response.on("end", function() {
      var newFilename;
      newFilename = getEpisodeFilename(fullURL);
      fs.writeFile(newFilename, str);
      downloadedRows++;
      return setTimeout(loadRow(), 1000);
    });
  };

  fullURL = "";

  loadRow = function() {
    var href, row, rowID;
    if (downloadedRows >= rows.length) {
      return -1;
    }
    row = rows[downloadedRows];
    rowID = $(row).find('[scope="row"]').attr('id');
    if (typeof rowID === "undefined") {
      downloadedRows++;
      loadRow();
      return;
    }
    console.log(rowID);
    if (rowID.indexOf('ep') !== -1) {
      href = $(row).find('.summary a').attr('href');
      console.log(href);
      fullURL = 'http://en.wikipedia.org' + href;
      return fs.exists(getEpisodeFilename(fullURL), function(fileDled) {
        if (fileDled) {
          downloadedRows++;
          return loadRow();
        } else {
          return http.request(url.parse(fullURL), getEpisodeCB).end();
        }
      });
    }
  };

}).call(this);
