// Generated by CoffeeScript 1.3.3
(function() {
  var actorLines, db, fs, pg, pgConnected, reader, recordPerson, text;

  fs = require('fs');

  pg = require('pg');

  db = null;

  reader = require('buffered-reader');

  actorLines = [];

  text = '';

  pgConnected = function(err, client) {
    var counter, savePerson;
    db = client;
    savePerson = false;
    counter = 0;
    console.log(process.argv);
    if (process.argv.length < 3 || (process.argv[2] !== 'actors' & process.argv[2] !== 'actresses')) {
      console.log('please specify actors or actresses');
      process.exit();
    }
    return new reader.DataReader('data/imdb/' + process.argv[2] + '.list', {
      encoding: 'utf8'
    }).on('end', function() {
      console.log('end');
      if (savePerson) {
        recordPerson();
      }
      console.log('about to write text');
      console.log(text);
      return fs.writeFile('data/imdb/seinfeld' + process.argv[2] + '.list', text, 'utf8', function() {
        console.log('file written');
        return process.exit();
      });
    }).on('line', function(line) {
      var l;
      if (typeof line === 'undefined') {
        return;
      }
      counter += 1;
      if (counter % 10000 === 0) {
        console.log(counter + ' of 13256039');
      }
      l = line.toString();
      if (l.charAt(0) !== '\t') {
        if (savePerson) {
          recordPerson();
        }
        actorLines = [];
        savePerson = false;
      }
      actorLines.push(l);
      if (l.indexOf('"Seinfeld"') !== -1 || l.indexOf('The Seinfeld Chronicles') !== -1) {
        return savePerson = true;
      }
    }).read();
  };

  recordPerson = function() {
    var idx, line, _results;
    _results = [];
    for (idx in actorLines) {
      line = actorLines[idx];
      if (idx === '0' || line.indexOf('"Seinfeld"') !== -1 || line.indexOf('The Seinfeld Chronicles') !== -1) {
        _results.push(text += line + "\n");
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  pg.connect(process.env.HEROKU_POSTGRESQL_PURPLE_URL, pgConnected);

}).call(this);
