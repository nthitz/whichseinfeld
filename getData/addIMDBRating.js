// Generated by CoffeeScript 1.3.3
var allLinesRead, db, dbConnected, episodeDBName, fs, linesParsed, parseLine, pg, ratings, ratingsLoaded;

fs = require('fs');

pg = require('pg');

ratings = null;

ratingsLoaded = function(err, data) {
  ratings = data.split("\n");
  return pg.connect(process.env.HEROKU_POSTGRESQL_PURPLE_URL, dbConnected);
};

db = null;

dbConnected = function(err, client) {
  db = client;
  return parseLine();
};

linesParsed = 0;

parseLine = function() {
  var line, name, parenPos, rating, sql;
  line = ratings[linesParsed];
  if (typeof line === 'undefined') {
    allLinesRead();
    return;
  }
  if (line.indexOf('{') === -1 && line.indexOf('Pilot') === -1) {
    linesParsed += 1;
    parseLine();
    return;
  }
  name = line.match(/\{[^}]+/);
  if (name === null) {
    name = "The Seinfeld Chronicles";
    rating = line.match(/([0-9]\.[0-9])\s+The/);
  } else {
    name = name[0].substr(1);
    parenPos = name.indexOf('(');
    name = name.substr(0, parenPos);
    rating = line.match(/([0-9]\.[0-9])\s+"/);
  }
  rating = parseFloat(rating[1]);
  sql = 'UPDATE episode SET imdbrating=' + rating + ' WHERE title LIKE \'' + episodeDBName(name) + '%\'';
  return db.query(sql, function(err, result) {
    if (result.rowCount === 0) {
      console.log(sql);
    }
    linesParsed += 1;
    return parseLine();
  });
};

episodeDBName = function(name) {
  name = name.replace("'", "''");
  name = name.replace(/^\s+|\s+$/g, "");
  name = name.replace('Highlights of a Hundred', 'The Highlights of 100');
  name = name.replace(/: (Part [12])/, " ($1)");
  name = name.replace("The Cafe", "The Caf√©");
  name = name.replace("The Chronicle", "The Clip Show (Part 1)");
  name = name.replace("The Fix Up", "The Fix-Up");
  name = name.replace("The Friars Club", "The Friar''s Club");
  name = name.replace("The Mom and Pop Store", "The Mom & Pop Store");
  name = name.replace("The Stakeout", "The Stake Out");
  name = name.replace("The Strongbox", "The Strong Box");
  return name;
};

allLinesRead = function() {
  return console.log('done');
};

fs.readFile('data/imdb/seinfeldRatings', 'utf8', ratingsLoaded);
